Description: Loadtest for Octank Poc

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Network Configuration"
        Parameters:
          - VPCName
          - CIDRVpc
          - CIDRPublicA
          - CIDRPublicB
          - InstanceFlavor
      -
        Label:
            default: "Locust Configuration"
        Parameters:
            - TargetEndpoint
            - Workers

Parameters:
  VPCName:
    Type: String
    Default: VPC-Locust
    Description: 'VPC name. Default: VPC-Locust'
  CIDRVpc:
    Type: String
    Default: 10.100.0.0/16
    Description: VPC CIDR
    AllowedPattern: '(\d{1,3})[.](\d{1,3})[.](\d{1,3})[.](\d{1,3})[/](\d{1,2})'
    ConstraintDescription: Must be a CIDR range a.b.c.d/x.
  CIDRPublicA:
    Type: String
    Default: 10.100.11.0/24
    Description: VPC CIDR Subnet Public-A
    AllowedPattern: '(\d{1,3})[.](\d{1,3})[.](\d{1,3})[.](\d{1,3})[/](\d{1,2})'
    ConstraintDescription: Must be a CIDR range a.b.c.d/x.
  CIDRPublicB:
    Type: String
    Default: 10.100.21.0/24
    Description: VPC CIDR Subnet Public-B
    AllowedPattern: '(\d{1,3})[.](\d{1,3})[.](\d{1,3})[.](\d{1,3})[/](\d{1,2})'
    ConstraintDescription: Must be a CIDR range a.b.c.d/x.
  InstanceFlavor:
    Type: String
    Default: t3.medium
    Description: Instance Type
  TargetEndpoint:
    Type: String
    Description: Endpoint of target host
    Default: https://www.yourwebsite.com
  Workers:
    Type: Number
    Default: 10
    Description: 'Quantity of workers'

Mappings:
  RegionAndResource:
    us-east-1:
      image: ami-0b898040803850657
    us-east-2:
      image: ami-05d72852800cbf29e
    us-west-1:
      image: ami-0577b787189839998
    us-west-2:
      image: ami-0518bb0e75d3619ca

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref CIDRVpc
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref VPCName
  IGW:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - IGW-
              - !Ref VPCName
        - Key: VPC
          Value: !Ref VPCName
  IGWAttach:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW
  RouteTablePubA:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Route-Table-Public-A
        - Key: VPC
          Value: !Ref VPCName
  RouteIGWA:
    Type: 'AWS::EC2::Route'
    DependsOn: IGW
    Properties:
      RouteTableId: !Ref RouteTablePubA
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
  RouteTablePubB:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Route-Table-Public-B
        - Key: VPC
          Value: !Ref VPCName
  RouteIGWB:
    Type: 'AWS::EC2::Route'
    DependsOn: IGW
    Properties:
      RouteTableId: !Ref RouteTablePubB
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
  SubnetPubA:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref CIDRPublicA
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PubSubnet-A
        - Key: VPC
          Value: !Ref VPCName
  RouteTableAssociationPubA:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetPubA
      RouteTableId: !Ref RouteTablePubA
  SubnetPubB:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref CIDRPublicB
      AvailabilityZone: !Select
        - '1'
        - !GetAZs ''
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PubSubnet-B
        - Key: VPC
          Value: !Ref VPCName
  RouteTableAssociationPubB:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetPubB
      RouteTableId: !Ref RouteTablePubB
  SecurityGroupHTTPEC2:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: HTTPSgEC2
      GroupDescription: HTTP(S)
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: -1
          CidrIp: !Ref CIDRVpc
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: HTTPSgEC2
  EC2Master:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !FindInMap
        - RegionAndResource
        - !Ref 'AWS::Region'
        - image
      InstanceType: c5.large
      SubnetId: !Ref SubnetPubA
      SecurityGroupIds:
        - !Ref SecurityGroupHTTPEC2
      UserData:
        Fn::Base64:
            !Sub |
                #!/bin/bash -xe
                sudo su
                echo * soft nofile 65536 >> /etc/security/limits.conf
                echo * hard nofile 65536 >> /etc/security/limits.conf
                echo root soft nofile 65536 >> /etc/security/limits.conf
                echo root hard nofile 65536 >> /etc/security/limits.conf
                ulimit -n 65536
                yum update -y
                yum -y groupinstall 'Development Tools'
                curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
                python3 get-pip.py
                /usr/local/bin/pip3 install virtualenv
                /usr/local/bin/virtualenv locustenv
                source locustenv/bin/activate
                /usr/local/bin/pip3 install locust
                cat >locustfile.py <<EOL
                from locust import HttpUser, TaskSet
                def index(l):
                    l.client.get("/")
                class UserBehavior(TaskSet):
                    tasks = {index: 2}
                class WebsiteUser(HttpUser):
                    tasks = [UserBehavior]
                    min_wait = 5000
                    max_wait = 9000
                EOL
                nohup /usr/local/bin/locust --master --host=${TargetEndpoint} --web-port 80 > /dev/null 2>&1 &
      Tags:
        - Key: Name
          Value: locust-master

  EC2Workers:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !FindInMap
        - RegionAndResource
        - !Ref 'AWS::Region'
        - image
      InstanceType: !Ref InstanceFlavor
      LaunchConfigurationName: OctLoadWorkersConfiguration
      SecurityGroups:
        - !Ref SecurityGroupHTTPEC2
      UserData:
        Fn::Base64:
            !Sub |
                #!/bin/bash -xe
                sudo su
                echo * soft nofile 65536 >> /etc/security/limits.conf
                echo * hard nofile 65536 >> /etc/security/limits.conf
                echo root soft nofile 65536 >> /etc/security/limits.conf
                echo root hard nofile 65536 >> /etc/security/limits.conf
                ulimit -n 65536
                sysctl -p
                yum update -y
                yum -y groupinstall 'Development Tools'
                curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
                python3 get-pip.py
                /usr/local/bin/pip3 install virtualenv
                /usr/local/bin/virtualenv locustenv
                source locustenv/bin/activate
                /usr/local/bin/pip3 install locust
                cat >locustfile.py <<EOL
                from locust import HttpUser, TaskSet
                def index(l):
                    l.client.get("/")
                class UserBehavior(TaskSet):
                    tasks = {index: 2}
                class WebsiteUser(HttpUser):
                    tasks = [UserBehavior]
                    min_wait = 5000
                    max_wait = 9000
                EOL
                /usr/local/bin/locust --worker --host=${TargetEndpoint} --master-host=${EC2Master.PublicDnsName}

  WorkerAutoScaling:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn: EC2Workers
    Properties:
      AutoScalingGroupName: OctLoadWorkers
      DesiredCapacity: !Ref Workers
      MaxSize: !Ref Workers
      MinSize: !Ref Workers
      LaunchConfigurationName: !Ref EC2Workers
      Tags:
        - Key: Name
          Value: load-worker
          PropagateAtLaunch: 'true'
      VPCZoneIdentifier:
        - !Ref SubnetPubA
        - !Ref SubnetPubB

Outputs:
  VPC:
    Description: VPC id
    Value: !Ref VPC
  LocustMaster:
    Description: Locust master instance
    Value: !GetAtt EC2Master.PublicDnsName
